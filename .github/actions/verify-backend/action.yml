name: Verify Backend
description: Runs verification steps for backend package

runs:
  using: composite
  steps:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # 의존성 관련 체크
    - name: Verify lockfile
      shell: bash
      run: pnpm install --no-frozen-lockfile --lockfile-only
    - name: Check duplicate dependencies
      shell: bash
      run: pnpm dedupe --check
    - name: Install dependencies
      shell: bash
      run: pnpm install --frozen-lockfile

    # 코드 품질 관련 체크
    - name: Format code
      id: format
      shell: bash
      run: |
        pnpm -F @my-projects/backend run format
        if [[ -n "$(git status -s)" ]]; then
          echo "formatted=true" >> $GITHUB_OUTPUT
        fi
    - name: Commit formatting changes if exist
      if: steps.format.outputs.formatted == 'true'
      shell: bash
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git commit -m "chore: apply prettier formatting" || echo "No changes to commit"
        git push
    - name: Run ESLint check
      shell: bash
      run: |
        pnpm -F @my-projects/backend run lint

    # 테스트
    - name: Run tests without containers
      shell: bash
      run: pnpm -F @my-projects/backend run test:no-deps
    - name: Run tests with containers
      shell: bash
      run: pnpm -F @my-projects/backend run test:deps

    # 빌드 체크
    - name: Check build
      shell: bash
      run: pnpm -F @my-projects/backend run build
