services:
  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    depends_on:
      - db
    env_file:
      - ./.env
    ports:
      - "${SERVER_PORT}:3000"
    volumes:
      - ./packages/backend:/app/packages/backend
    networks:
      - project-network
    profiles:
      - dev

  db:
    image: postgres:13-alpine
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "${DB_PORT}:5432"
    networks:
      - project-network
    profiles:
      - dev

  db-test:
    image: postgres:13-alpine
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${TEST_DB_USER}
      - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
      - POSTGRES_DB=${TEST_DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TEST_DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "${TEST_DB_PORT}:5432"
    profiles:
      - test

networks:
  project-network:
    driver: bridge
